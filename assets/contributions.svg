<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="200" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <linearGradient id="contribGrad" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style="stop-color:#9be9a8;stop-opacity:1" />
            <stop offset="50%" style="stop-color:#40c463;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#30a14e;stop-opacity:1" />
        </linearGradient>
        <style>
            @keyframes fillUp {
                from { height: 0; }
                to { height: 100%; }
            }
            .contrib-block { animation: fillUp 1.5s ease-out forwards; }
        </style>
    </defs>
    <rect width="100%" height="100%" fill="#0d1117"/>
    <g transform="translate(50, 50)">
        <!-- Contribution grid animation -->
        <g id="contribution-grid"></g>
        <script type="text/javascript"><![CDATA[
            const grid = document.getElementById('contribution-grid');
            const blocks = 52 * 7; // 52 weeks * 7 days
            const size = 10;
            const gap = 2;

            for (let i = 0; i < blocks; i++) {
                const x = Math.floor(i / 7) * (size + gap);
                const y = (i % 7) * (size + gap);
                const rect = document.createElementNS("http://www.w3.org/2000/svg", "rect");
                rect.setAttribute("x", x);
                rect.setAttribute("y", y);
                rect.setAttribute("width", size);
                rect.setAttribute("height", size);
                rect.setAttribute("fill", "url(#contribGrad)");
                rect.setAttribute("class", "contrib-block");
                rect.style.animationDelay = `${i * 10}ms`;
                grid.appendChild(rect);
            }
        ]]></script>
    </g>
</svg>
